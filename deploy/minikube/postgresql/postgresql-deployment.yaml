apiVersion: apps/v1

kind: Deployment

metadata:
  name: postgresql
  labels:
    app: postgresql

spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:14-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgresql-config
            - secretRef:
                name: postgresql-secret
          volumeMounts:
            - name: postgresql-pv
              mountPath: /var/lib/postgresql/data
          startupProbe:
            exec:
              command: [ '/bin/bash', '-c', 'pg_isready -U $POSTGRES_USER -d $POSTGRES_DB' ]
            initialDelaySeconds: 30
            timeoutSeconds: 3
          livenessProbe:
            exec:
              command: [ '/bin/bash', '-c', 'pg_isready -U $POSTGRES_USER -d $POSTGRES_DB' ]
            initialDelaySeconds: 30
            timeoutSeconds: 3
          readinessProbe:
            exec:
              command: [ '/bin/bash', '-c', 'pg_isready -U $POSTGRES_USER -d $POSTGRES_DB' ]
            initialDelaySeconds: 30
            timeoutSeconds: 3
      volumes:
        - name: postgresql-pv
          persistentVolumeClaim:
            claimName: postgresql-pvc
