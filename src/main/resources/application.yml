server:
  port: 8080

spring:
  profiles:
    active: ${SPRING_PROFILE}
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  security:
    user:
      name: ${SPRING_SECURITY_USER}
      password: ${SPRING_SECURITY_PASSWORD}
  cache:
    jcache:
      config: classpath:ehcache.xml

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  server:
    port: 8081
  endpoint:
    health:
      probes:
        enabled: true

sentry:
  dsn: ${SENTRY_DSN}
  traces-sample-rate: 1.0
  environment: ${SPRING_PROFILE}

jwt:
  issuer: ${JWT_ISSUER}
  signing-key: ${JWT_SIGNING_KEY}
  duration-minutes: ${JWT_DURATION_MINUTES}
  leeway-seconds: ${JWT_LEEWAY_SECONDS}

springdoc:
  default-produces-media-type: application/json

bucket4j:
  enabled: true
  filters:
    - cache-name: bucket4j-buckets
      url: .*
      http-content-type: application/json
      http-response-body: ''
      rate-limits:
        - expression: '@currentUserService.getCurrentUserId() ?: getRemoteAddr()'
          bandwidths:
            - capacity: 60
              time: 1
              unit: minutes
    - cache-name: bucket4j-buckets
      url: /sign-in
      http-content-type: application/json
      http-response-body: ''
      rate-limits:
        - expression: getRemoteAddr()
          bandwidths:
            - capacity: 5
              time: 1
              unit: minutes
    - cache-name: bucket4j-buckets
      url: /sign-up
      http-content-type: application/json
      http-response-body: ''
      rate-limits:
        - expression: getRemoteAddr()
          bandwidths:
            - capacity: 5
              time: 1
              unit: minutes
